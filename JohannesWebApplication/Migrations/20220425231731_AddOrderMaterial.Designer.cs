// <auto-generated />
using JohannesWebApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JohannesWebApplication.Migrations
{
    [DbContext(typeof(PrintersDbContext))]
    [Migration("20220425231731_AddOrderMaterial")]
    partial class AddOrderMaterial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("JohannesWebApplication.Models.MaterialModel", b =>
                {
                    b.Property<int>("MaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MaterialID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.OrderMaterial", b =>
                {
                    b.Property<int>("OrderMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderMaterialId");

                    b.HasIndex("MaterialId")
                        .IsUnique();

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.ToTable("OrderMaterial");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.OrderModel", b =>
                {
                    b.Property<int>("PrinterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Infill")
                        .HasColumnType("REAL");

                    b.HasKey("PrinterID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.PrinterMaterial", b =>
                {
                    b.Property<int>("PrinterMaterialID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PrinterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrinterMaterialID");

                    b.HasIndex("MaterialId")
                        .IsUnique();

                    b.HasIndex("PrinterId")
                        .IsUnique();

                    b.ToTable("PrinterMaterial");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.PrinterModel", b =>
                {
                    b.Property<int>("PrinterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SizeX")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SizeY")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SizeZ")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrinterID");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.UserPrinter", b =>
                {
                    b.Property<int>("PrinterId")
                        .HasColumnType("INTEGER");

                    b.HasIndex("PrinterId");

                    b.ToTable("UserPrinters");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.OrderMaterial", b =>
                {
                    b.HasOne("JohannesWebApplication.Models.MaterialModel", "Material")
                        .WithOne("Order")
                        .HasForeignKey("JohannesWebApplication.Models.OrderMaterial", "MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JohannesWebApplication.Models.OrderModel", "Order")
                        .WithOne("Material")
                        .HasForeignKey("JohannesWebApplication.Models.OrderMaterial", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.PrinterMaterial", b =>
                {
                    b.HasOne("JohannesWebApplication.Models.MaterialModel", "Material")
                        .WithOne("Printer")
                        .HasForeignKey("JohannesWebApplication.Models.PrinterMaterial", "MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JohannesWebApplication.Models.PrinterModel", "Printer")
                        .WithOne("Material")
                        .HasForeignKey("JohannesWebApplication.Models.PrinterMaterial", "PrinterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Printer");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.UserPrinter", b =>
                {
                    b.HasOne("JohannesWebApplication.Models.PrinterModel", "Printer")
                        .WithMany()
                        .HasForeignKey("PrinterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Printer");
                });

            modelBuilder.Entity("JohannesWebApplication.Models.MaterialModel", b =>
                {
                    b.Navigation("Order")
                        .IsRequired();

                    b.Navigation("Printer")
                        .IsRequired();
                });

            modelBuilder.Entity("JohannesWebApplication.Models.OrderModel", b =>
                {
                    b.Navigation("Material")
                        .IsRequired();
                });

            modelBuilder.Entity("JohannesWebApplication.Models.PrinterModel", b =>
                {
                    b.Navigation("Material")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
